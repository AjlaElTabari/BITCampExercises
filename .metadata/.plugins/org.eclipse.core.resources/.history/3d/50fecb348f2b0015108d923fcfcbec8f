package homework23;

import java.util.Arrays;
import java.util.EmptyStackException;

/**
 * Represents an implementation of queue of doubles logic, using arrays.
 * @author ajla.eltabari
 *
 */
public class QueueArrayDouble {
	private double[] array;
	
	/**
	 * Constructor.
	 * Initializing an array to length of zero.
	 */
	QueueArrayDouble() {
		array = new double[0];
	}
	
	/**
	 * Implementation of add method for queues.
	 * Adds element at the beginning of the array.
	 */
	public double add(double value) {
		double[] newArray = new double[array.length + 1];
		for (int i = 0; i < array.length; i++) {
			newArray[i + 1] = array[i];
		}
		array[0] = value;
		return value;
	}
	
	/**
	 * Returns first added element from the queue
	 * Does'n do anything with that element.
	 * @return
	 * @throws EmptyStackException
	 */
	public double peek() throws EmptyStackException {
		if (array.length > 0) {
			return array[array.length - 1];
		} else {
			throw new EmptyStackException();
		}
	}
	
	/**
	 * Removes first added element from the queue.
	 * Returns null if queue is empty.
	 * @return
	 * @throws EmptyStackException
	 */
	public Double poll() {
		if (array.length > 0) {
			double temp = array[array.length - 1];
			array = Arrays.copyOf(array, array.length - 1);
			return temp;
		} else {
			return null;
		}
	}
}
